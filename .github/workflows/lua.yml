name: Lua CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "**/*.lua"
  pull_request:
    branches:
      - main
    paths:
      - "**/*.lua"

jobs:
  run_tests:
    name: unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            rev: v0.10.0/nvim-linux64.tar.gz
    steps:
      - uses: actions/checkout@v3

      - run: date +%F > todays-date

      - name: Restore cache for today's nightly
        uses: actions/cache@v3
        with:
          path: _neovim
          key: ${{ runner.os }}-${{ matrix.rev }}-${{ hashFiles('todays-date') }}

      - name: Prepare
        run: |
          test -d _neovim || {
            mkdir -p _neovim
            curl -sL "https://github.com/neovim/neovim/releases/download/${{ matrix.rev }}" | tar xzf - --strip-components=1 -C "${PWD}/_neovim"
          }

      - name: Create minimal init.lua
        run: |
          mkdir -p tests
          cat > tests/minimal_init.lua << 'EOF'
          local plenary_dir = os.getenv('PLENARY_DIR') or '/home/runner/.local/share/nvim/site/pack/vendor/start/plenary.nvim'
          local is_windows = vim.loop.os_uname().sysname == "Windows_NT"
          local base_dir = vim.loop.cwd()

          vim.cmd('set rtp+=' .. plenary_dir)
          vim.cmd('set rtp+=' .. base_dir)
          vim.cmd('runtime plugin/plenary.vim')
          vim.cmd('runtime plugin/cargo.lua')

          local function join_paths(...)
            local result = table.concat({ ... }, '/')
            return is_windows and result:gsub('/', '\\') or result
          end

          local function normalize_path(path)
            return is_windows and path:gsub('\\', '/') or path
          end

          local lua_path = join_paths(base_dir, 'lua')
          package.path = normalize_path(lua_path) .. '/?.lua;' .. normalize_path(lua_path) .. '/?/init.lua;' .. package.path
          EOF

      - name: Run tests
        run: |
          export PATH="${PWD}/_neovim/bin:${PATH}"
          export VIM="${PWD}/_neovim/share/nvim/runtime"
          # install nvim-lua/plenary.nvim
          git clone --depth 1 https://github.com/nvim-lua/plenary.nvim ~/.local/share/nvim/site/pack/vendor/start/plenary.nvim
          nvim --version
          nvim --headless --noplugin -u tests/minimal_init.lua -c "PlenaryBustedDirectory tests/ { minimal_init = './tests/minimal_init.lua' }"

  stylua:
    name: Check Lua style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install stylua
        uses: baptiste0928/cargo-install@v3
        with:
          crate: stylua
          features: lua54

      - run: stylua --version
      - run: stylua --color always --check ./lua/ ./plugin/ ./tests/

  luacheck:
    name: Lint Lua
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Luacheck linter
        uses: lunarmodules/luacheck@v1
        with:
          args: ./lua/
